name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-schema-thesis:
    runs-on: ubuntu-latest
    environment: vulmatch_tests
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
    
          
      - name: Set .env for docker-compose
        run: |
            echo > .env
            echo "CTIBUTLER_BASE_URL=${{ secrets.CTIBUTLER_BASE_URL }}" >> .env
            echo "CTIBUTLER_API_KEY=${{ secrets.CTIBUTLER_API_KEY }}" >> .env
            echo 'DEFAULT_PAGE_SIZE=5000'

            cat tests/st/.env.schemathesis >> .env
            cp tests/st/docker-compose.yml arango-compose.yml

            echo ==== env file start =====
            cat .env
            echo
            echo ==== env file end   =====

         
      - name: Start docker-compose
        uses: hoverkraft-tech/compose-action@v2.0.2
        with:
          compose-file: |
            arango-compose.yml
            docker-compose.yml
          compose-flags:
            --env-file .env
            -p vulmatch-action

      - name: Get IP addresses
        id: get_ip
        run: |
              IP_ADDRESS=$(docker network inspect -f '{{range.IPAM.Config}}{{.Gateway}}{{end}}' vulmatch-action_default)
              echo "ip_address=$IP_ADDRESS" >> "$GITHUB_OUTPUT"
              echo "IP_ADDRESS=$IP_ADDRESS" >> "$GITHUB_OUTPUT"
              echo "SERVICE_BASE_URL=http://$IP_ADDRESS:8005/" >> "$GITHUB_OUTPUT"
              cat "$GITHUB_OUTPUT"

      - name: Wait for server to start
        run: |
              RETRY_DELAY=3
              RETRY_COUNT=10
              echo "Waiting for server to start"
              curl --retry-delay $RETRY_DELAY --retry $RETRY_COUNT --retry-connrefused ${{ steps.get_ip.outputs.SERVICE_BASE_URL }} > /dev/null
              if [ $? -ne 0 ]; then
                echo "exiting after waiting $(( $RETRY_DELAY * $RETRY_COUNT )) seconds for server to start"
                exit 1
              fi

    

      - name: test all endpoints 1
        id: test-endpoints
        run: |
          pip install -r tests/requirements.txt
          export SERVICE_BASE_URL="${{ steps.get_ip.outputs.SERVICE_BASE_URL }}"

          pytest tests/

      - name: run schemathesis
        uses: schemathesis/action@v1
        if: always()
        env:
          SCHEMATHESIS_HOOKS: tests.st.hooks
        with:
          schema: ${{ steps.get_ip.outputs.SERVICE_BASE_URL }}/api/schema/
          checks: all
          wait-for-schema: '30'
          args: '--generation-allow-x00 false --exclude-method POST'
